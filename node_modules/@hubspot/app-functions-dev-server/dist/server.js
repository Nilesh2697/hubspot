"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
// @ts-expect-error type declaration not available
const cli_lib_1 = require("@hubspot/cli-lib");
const services_1 = require("./services");
const constants_1 = require("./constants");
const config_1 = require("./config");
let appPath = '';
const maybeAppPath = process.argv[process.argv.length - 1];
if (fs_1.default.existsSync(maybeAppPath)) {
    const stats = fs_1.default.lstatSync(maybeAppPath);
    if (stats.isDirectory()) {
        appPath = maybeAppPath;
    }
}
if (!appPath) {
    console.error('Missing argument for the app directory');
    process.exit(1);
}
console.log(`Serving functions from the app directory ${appPath}`);
const accountId = (0, cli_lib_1.getAccountId)();
if (!accountId) {
    console.error(`No default account detected. Make sure there is a "hubspot.config.yml" file up the directory tree from the current working directory (${process.cwd()}). You can run the command \`hs accounts info\` to verify the default account.`);
    process.exit(1);
}
console.log(`Account ID ${accountId}`);
const config = (0, config_1.buildServiceConfiguration)(appPath, { accountId });
const app = (0, services_1.AppFunctionExecutionService)(config);
const port = constants_1.DEV_SERVER_DEFAULT_PORT;
app.listen(port, () => {
    console.log(`Listening at http://localhost:${port}`);
});
//# sourceMappingURL=server.js.map