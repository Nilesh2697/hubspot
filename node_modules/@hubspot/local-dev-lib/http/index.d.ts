import { LogCallbacksArg } from '../types/LogCallbacks';
import { HttpOptions } from '../types/Http';
import { AxiosResponse } from 'axios';
declare function getRequest<T>(accountId: number, options: HttpOptions): Promise<T>;
declare function postRequest<T>(accountId: number, options: HttpOptions): Promise<T>;
declare function putRequest<T>(accountId: number, options: HttpOptions): Promise<T>;
declare function patchRequest<T>(accountId: number, options: HttpOptions): Promise<T>;
declare function deleteRequest<T>(accountId: number, options: HttpOptions): Promise<T>;
declare const getRequestStreamCallbackKeys: string[];
declare const http: {
    get: typeof getRequest;
    post: typeof postRequest;
    put: typeof putRequest;
    patch: typeof patchRequest;
    delete: typeof deleteRequest;
    getOctetStream: (accountId: number, options: HttpOptions, destPath: string, logCallbacks?: LogCallbacksArg<typeof getRequestStreamCallbackKeys>) => Promise<AxiosResponse>;
};
export default http;
