import chokidar from 'chokidar';
import { AxiosError } from 'axios';
import { LogCallbacksArg } from '../../types/LogCallbacks';
import { Mode } from '../../types/Files';
import { UploadFolderResults } from '../../types/Files';
declare const watchCallbackKeys: readonly ["notifyOfThemePreview", "uploadSuccess", "deleteSuccess", "folderUploadSuccess", "ready", "deleteSuccessWithType"];
type WatchLogCallbacks = LogCallbacksArg<typeof watchCallbackKeys>;
type WatchOptions = {
    mode?: Mode;
    remove?: boolean;
    disableInitial?: boolean;
    notify?: string;
    commandOptions: {
        convertFields?: boolean;
    };
    filePaths?: Array<string>;
};
type ErrorHandler = (error: AxiosError) => void;
export declare function watch(accountId: number, src: string, dest: string, { mode, remove, disableInitial, notify, commandOptions, filePaths, }: WatchOptions, postInitialUploadCallback?: ((result: Array<UploadFolderResults>) => void) | null, onUploadFolderError?: ErrorHandler, onQueueAddError?: ErrorHandler, logCallbacks?: WatchLogCallbacks): chokidar.FSWatcher;
export {};
