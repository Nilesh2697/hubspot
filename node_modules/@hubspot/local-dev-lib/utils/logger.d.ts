import { LogCallbacks } from '../types/LogCallbacks';
import { LangKey } from '../types/Lang';
export declare function log<T extends string>(key: T, callbacks?: LogCallbacks<T>, debugKey?: LangKey, debugInterpolation?: {
    [key: string]: string | number;
}): void;
export declare function makeTypedLogger<T extends readonly string[]>(callbacks?: LogCallbacks<T[number]>): (key: T[number], debugKey?: LangKey, debugInterpolation?: {
    [key: string]: string | number;
} | undefined) => void;
export declare function debug(identifier: LangKey, interpolation?: {
    [key: string]: string | number;
}): void;
